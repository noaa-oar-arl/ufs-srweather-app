# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import sphinx
from sphinx.util import logging



# -- Project information -----------------------------------------------------

project = 'UFS Short-Range Weather App User\'s Guide'
copyright = '2020, '
author = ' '

# The short X.Y version
version = 'develop'
# The full version, including alpha/beta/rc tags
release = 'Develop Branch Documentation'
html_logo = "https://github.com/ufs-community/ufs/wiki/images/ufs-epic-logo.png"

numfig = True


# -- General configuration ---------------------------------------------------

# Sphinx extension module names:
extensions = [
    'sphinx_rtd_theme',
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.extlinks',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.napoleon',
    'sphinxcontrib.bibtex',
]

bibtex_bibfiles = ['references.bib']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. 
# Not set because default is 'en'.
# language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build',
                    '.DS_Store',]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# Documentation-wide substitutions

rst_prolog = """
.. |wflow_env| replace:: ``srw_app``
.. |graphics_env| replace:: ``regional_workflow``
.. |cmaq_env| replace:: ``regional_workflow_cmaq``
.. |activate| replace:: ``conda activate srw_app``
.. |prompt| replace:: ``(srw_app)``
.. |latestr| replace:: v2.2.0
.. |branch| replace:: ``develop``
.. |data| replace:: develop
"""

# Linkcheck options

# Avoid a 403 Forbidden error when accessing certain links (e.g., noaa.gov)
user_agent = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"

# Ignore working links that cause a linkcheck 403 error.
linkcheck_ignore = [r'https://www\.intel\.com/content/www/us/en/docs/cpp\-compiler/developer\-guide\-reference/2021\-10/thread\-affinity\-interface\.html',
                    r'https://www\.intel\.com/content/www/us/en/developer/tools/oneapi/hpc\-toolkit\-download\.html',
                    #r'https://glossary.ametsoc.org/.*',
                   ]

# Ignore anchor tags for SRW App data bucket. Shows Not Found even when they exist.
linkcheck_anchors_ignore = [r"current_srw_release_data/", 
                            r"input_model_data/.*",
                            r"fix.*",
                            r"sample_cases/.*",
                            ]

linkcheck_allowed_redirects = {r"https://github\.com/ufs-community/ufs-srweather-app/wiki/.*": 
                                 r"https://raw\.githubusercontent\.com/wiki/ufs-community/ufs-srweather-app/.*",
                               r"https://github\.com/ufs-community/ufs-srweather-app/issues/new/choose": 
                                 r"https://github\.com/login",
                               r"https://doi\.org/.*/zenodo\..*": r"https://zenodo\.org/records/.*",
                               r"https://doi\.org/.*": r"https://gmd\.copernicus\.org/.*",
                               r"https://rdhpcs\-common\-docs\.rdhpcs\.noaa\.gov/wiki/index\.php/Transferring\_Data": 
                                 r"https://sso\.noaa\.gov\:443/openam/SSORedirect/metaAlias/noaa\-online/idp\?SAMLRequest\=.*",
                               r"https://github\.com/ufs-community/ufs\-srweather\-app/issues/.*": 
                                 r"https://github\.com/login\?return\_to\=https.*",
                               }


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = ["_themes", ]
html_logo= "https://github.com/ufs-community/ufs/wiki/images/ufs-epic-logo.png"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}
html_theme_options = {
    "body_max_width": "none", 
    "navigation_depth": 8,
    }

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = []
html_static_path = ['_static']
html_context = {}

def setup(app):
    app.add_css_file('custom.css')  # may also be an URL
    app.add_css_file('theme_overrides.css')  # may also be a URL

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'UFS-SRWeather-App'


# -- Options for LaTeX output ------------------------------------------------

latex_engine = 'pdflatex'
latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
      'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
      'pointsize': '11pt',

    # Additional stuff for the LaTeX preamble.
      'preamble': r'''
        \usepackage{charter}
        \usepackage[defaultsans]{lato}
        \usepackage{inconsolata}
    ''',
    # Release name prefix
      'releasename': ' ',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'UFS-SRWeatherApp.tex', 'UFS Short-Range Weather App Documentation',
     ' ', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'UFS-SRWeatherApp', 'UFS Short-Range Weather App Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'UFS-SRWeatherApp', 'UFS Short-Range Weather App Users Guide',
     author, 'UFS-SRWeatherApp', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
   'python': ('https://docs.python.org/3', None),
   'hpc-stack': ('https://hpc-stack-epic.readthedocs.io/en/develop/', None),
   'spack-stack': ('https://spack-stack.readthedocs.io/en/develop/', None),
   'met': ('https://met.readthedocs.io/en/develop/', None),
   'metplus': ('https://metplus.readthedocs.io/en/develop/', None),
   'ufs-wm': ('https://ufs-weather-model.readthedocs.io/en/develop/', None),
   'upp': ('https://upp.readthedocs.io/en/develop/', None),
   'ufs-utils': ('https://noaa-emcufs-utils.readthedocs.io/en/latest/', None),
   'ccpp-techdoc': ('https://ccpp-techdoc.readthedocs.io/en/ufs_srw_app_v2.2.0/', None),
   'stochphys': ('https://stochastic-physics.readthedocs.io/en/latest/', None),
   'srw_v2.2.0': ('https://ufs-srweather-app.readthedocs.io/en/release-public-v2.2.0/', None),
}

# -- Options for extlinks extension ---------------------------------------

extlinks_detect_hardcoded_links = True
extlinks = {'github-docs': ('https://docs.github.com/en/%s', '%s'),
            'nco': ('https://www.nco.ncep.noaa.gov/idsb/implementation_standards/%s', '%s'),
            "rst": ("https://www.sphinx-doc.org/en/master/usage/restructuredtext/%s", "%s"),
            "rtd": ("https://readthedocs.org/projects/ufs-srweather-app/%s", "%s"),
            'srw-repo': ('https://github.com/ufs-community/ufs-srweather-app/%s', '%s'),
            'srw-wiki': ('https://github.com/ufs-community/ufs-srweather-app/wiki/%s','%s'),
            'uw': ('https://uwtools.readthedocs.io/en/main/%s', '%s'),
            }