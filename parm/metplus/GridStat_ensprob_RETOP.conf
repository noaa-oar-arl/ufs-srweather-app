# Ensemble probabilistic GridStat METplus Configuration

[config]

# List of applications (tools) to run.
PROCESS_LIST = GridStat

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {{cdate}}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {{cdate}}

# Increment between METplus runs (in seconds if no units are specified).
# Must be >= 60 seconds.
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {{fhr_list}}
#
# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
#
LOOP_ORDER = times
#
# Verbosity of MET logging output.  0 to 5; 0 is quiet, 5 is loud.
#
LOG_{{METPLUS_TOOL_NAME}}_VERBOSITY = {{metplus_verbosity_level}}
#
# Specify the name of the METplus log file.
#
LOG_METPLUS = {LOG_DIR}/{{metplus_log_fn}}
#
# Specify the location and name of the final METplus conf file.
#
METPLUS_CONF = {GRID_STAT_OUTPUT_DIR}/metplus_final.{{metplus_config_fn}}
#
# Location of MET configuration file to pass to GridStat.
#
# References PARM_BASE, which is the location of the parm directory
# corresponding to the ush directory of the run_metplus.py script that
# is called or the value of the environment variable METPLUS_PARM_BASE
# if set.
#
GRID_STAT_CONFIG_FILE = {PARM_BASE}/met_config/GridStatConfig_wrapped

# grid to remap data. Value is set as the 'to_grid' variable in the 'regrid' dictionary
# See MET User's Guide for more information
GRID_STAT_REGRID_TO_GRID = FCST
GRID_STAT_REGRID_VLD_THRESH = 0.5
GRID_STAT_REGRID_METHOD = BUDGET
GRID_STAT_REGRID_WIDTH = 2
GRID_STAT_REGRID_SHAPE = SQUARE

GRID_STAT_INTERP_FIELD = NONE
GRID_STAT_INTERP_VLD_THRESH = 1.0
GRID_STAT_INTERP_SHAPE = SQUARE
GRID_STAT_INTERP_TYPE_METHOD = NEAREST
GRID_STAT_INTERP_TYPE_WIDTH = 1

GRID_STAT_GRID_WEIGHT_FLAG = NONE
#
# Name to identify model (forecast) data in output.
#
# The variable MODEL is recorded in the stat files, and the data in
# these files is then plotted (e.g. using METViewer).  Here, we add a
# suffix to MODEL that identifies the data as ensemble-probabilistic.
# This makes it easier to identify each curve.
#
MODEL = {{vx_fcst_model_name}}_ensprob
#
# Name to identify observation data in output.
#
OBTYPE = {{obtype}}
#
# Value to enter under the DESC column in the output stat file.
#
GRID_STAT_DESC = NA

# List of variables to compare in GridStat - FCST_VAR1 variables correspond
#  to OBS_VAR1 variables
# Note [FCST/OBS/BOTH]_GRID_STAT_VAR<n>_NAME can be used instead if different evaluations
# are needed for different tools

GRID_STAT_MET_CONFIG_OVERRIDES = cat_thresh = [NA]; cnt_thresh = [NA]; cnt_logic = UNION; wind_thresh = [NA]; wind_logic = UNION; ci_alpha = [0.05]; rank_corr_flag = FALSE;
#
# List of forecast and corresponding observation fields to process.
#
# FREQ
# Process as probability
#
FCST_VAR1_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge20
FCST_VAR1_LEVELS = L0
FCST_VAR1_THRESH = ==0.1
OBS_VAR1_NAME = EchoTop18
OBS_VAR1_LEVELS = Z500
OBS_VAR1_THRESH = ge20
OBS_VAR1_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;

FCST_VAR2_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge30
FCST_VAR2_LEVELS = L0
FCST_VAR2_THRESH = ==0.1
OBS_VAR2_NAME = EchoTop18
OBS_VAR2_LEVELS = Z500
OBS_VAR2_THRESH = ge30
OBS_VAR2_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;

FCST_VAR3_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge40
FCST_VAR3_LEVELS = L0
FCST_VAR3_THRESH = ==0.1
OBS_VAR3_NAME = EchoTop18
OBS_VAR3_LEVELS = Z500
OBS_VAR3_THRESH = ge40
OBS_VAR3_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;

FCST_VAR4_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge50
FCST_VAR4_LEVELS = L0
FCST_VAR4_THRESH = ==0.1
OBS_VAR4_NAME = EchoTop18
OBS_VAR4_LEVELS = Z500
OBS_VAR4_THRESH = ge50
OBS_VAR4_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;

#
#Process as scalars for neighborhood methods
## Note that the number of forecast and obs thresholds must match
## but won't actually be applied to NBRCNT outputs with "nbrhd.field = OBS;"
#
FCST_VAR5_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge20
FCST_VAR5_LEVELS = L0
FCST_VAR5_THRESH = ==0.1
FCST_VAR5_OPTIONS = prob = FALSE;
OBS_VAR5_NAME = EchoTop18
OBS_VAR5_LEVELS = Z500
OBS_VAR5_THRESH = ge20
OBS_VAR5_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;
                   nbrhd = { field = OBS; shape = SQUARE; width = [ 1 ]; vld_thresh = 1.0; }

FCST_VAR6_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge30
FCST_VAR6_LEVELS = L0
FCST_VAR6_THRESH = ==0.1
FCST_VAR6_OPTIONS = prob = FALSE;
OBS_VAR6_NAME = EchoTop18
OBS_VAR6_LEVELS = Z500
OBS_VAR6_THRESH = ge30
OBS_VAR6_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;
                   nbrhd = { field = OBS; shape = SQUARE; width = [ 1 ]; vld_thresh = 1.0; }

FCST_VAR7_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge40
FCST_VAR7_LEVELS = L0
FCST_VAR7_THRESH = ==0.1
FCST_VAR7_OPTIONS = prob = FALSE;
OBS_VAR7_NAME = EchoTop18
OBS_VAR7_LEVELS = Z500
OBS_VAR7_THRESH = ge40
OBS_VAR7_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;
                   nbrhd = { field = OBS; shape = SQUARE; width = [ 1 ]; vld_thresh = 1.0; }

FCST_VAR8_NAME = {{fieldname_in_met_output}}_L0_ENS_FREQ_ge50
FCST_VAR8_LEVELS = L0
FCST_VAR8_THRESH = ==0.1
FCST_VAR8_OPTIONS = prob = FALSE;
OBS_VAR8_NAME = EchoTop18
OBS_VAR8_LEVELS = Z500
OBS_VAR8_THRESH = ge50
OBS_VAR8_OPTIONS = censor_thresh = lt-20.0;
                   censor_val = -20.0;
                   cnt_thresh = [ >15 ];
                   cnt_logic = UNION;
                   convert(x) = x * 3280.84 * 0.001;
                   nbrhd = { field = OBS; shape = SQUARE; width = [ 1 ]; vld_thresh = 1.0; }

#
# Forecast data time window(s).
#
#FCST_GRID_STAT_FILE_WINDOW_BEGIN = 0
#FCST_GRID_STAT_FILE_WINDOW_END = 0
#
# Observation data time window(s).
#
OBS_GRID_STAT_FILE_WINDOW_BEGIN = -300
OBS_GRID_STAT_FILE_WINDOW_END = 300

# MET GridStat neighborhood values
# See the MET User's Guide GridStat section for more information
GRID_STAT_NEIGHBORHOOD_FIELD =

# width value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_WIDTH =

# shape value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_SHAPE =

# cov thresh list passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_COV_THRESH = >=0.5

# Set to true to run GridStat separately for each field specified
# Set to false to create one run of GridStat per run time that
#   includes all fields specified.
GRID_STAT_ONCE_PER_FIELD = False
#
# Set to true if forecast data is probabilistic.
#
FCST_IS_PROB = True
FCST_PROB_IN_GRIB_PDS = False
#
# Only used if FCST_IS_PROB is true - sets probabilistic threshold
#
FCST_GRID_STAT_PROB_THRESH = ==0.1

GRID_STAT_OUTPUT_PREFIX = {MODEL}_{{fieldname_in_met_filedir_names}}_{OBTYPE}

# Climatology data
#GRID_STAT_CLIMO_MEAN_FILE_NAME =
#GRID_STAT_CLIMO_MEAN_FIELD =
#GRID_STAT_CLIMO_MEAN_REGRID_METHOD =
#GRID_STAT_CLIMO_MEAN_REGRID_WIDTH =
#GRID_STAT_CLIMO_MEAN_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_MEAN_REGRID_SHAPE =
#GRID_STAT_CLIMO_MEAN_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_MEAN_MATCH_MONTH =
#GRID_STAT_CLIMO_MEAN_DAY_INTERVAL =
#GRID_STAT_CLIMO_MEAN_HOUR_INTERVAL =

#GRID_STAT_CLIMO_STDEV_FILE_NAME =
#GRID_STAT_CLIMO_STDEV_FIELD =
#GRID_STAT_CLIMO_STDEV_REGRID_METHOD =
#GRID_STAT_CLIMO_STDEV_REGRID_WIDTH =
#GRID_STAT_CLIMO_STDEV_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_STDEV_REGRID_SHAPE =
#GRID_STAT_CLIMO_STDEV_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_STDEV_MATCH_MONTH =
#GRID_STAT_CLIMO_STDEV_DAY_INTERVAL =
#GRID_STAT_CLIMO_STDEV_HOUR_INTERVAL =

GRID_STAT_CLIMO_CDF_BINS = 1
#GRID_STAT_CLIMO_CDF_CENTER_BINS = False
#GRID_STAT_CLIMO_CDF_WRITE_BINS = True

GRID_STAT_MASK_GRID =

# Statistical output types
GRID_STAT_OUTPUT_FLAG_FHO = NONE
GRID_STAT_OUTPUT_FLAG_CTC = NONE
GRID_STAT_OUTPUT_FLAG_CTS = NONE
GRID_STAT_OUTPUT_FLAG_MCTC = NONE
GRID_STAT_OUTPUT_FLAG_MCTS = NONE
GRID_STAT_OUTPUT_FLAG_CNT = NONE
GRID_STAT_OUTPUT_FLAG_SL1L2 = NONE
GRID_STAT_OUTPUT_FLAG_SAL1L2 = NONE
GRID_STAT_OUTPUT_FLAG_VL1L2 = NONE
GRID_STAT_OUTPUT_FLAG_VAL1L2 = NONE
GRID_STAT_OUTPUT_FLAG_VCNT = NONE
GRID_STAT_OUTPUT_FLAG_PCT = STAT
GRID_STAT_OUTPUT_FLAG_PSTD = STAT
GRID_STAT_OUTPUT_FLAG_PJC = STAT
GRID_STAT_OUTPUT_FLAG_PRC = STAT
GRID_STAT_OUTPUT_FLAG_ECLV = NONE
GRID_STAT_OUTPUT_FLAG_NBRCTC = NONE
GRID_STAT_OUTPUT_FLAG_NBRCTS = NONE
GRID_STAT_OUTPUT_FLAG_NBRCNT = STAT
GRID_STAT_OUTPUT_FLAG_GRAD = NONE

# NetCDF matched pairs output file
#GRID_STAT_NC_PAIRS_VAR_NAME =
GRID_STAT_NC_PAIRS_FLAG_LATLON = FALSE
GRID_STAT_NC_PAIRS_FLAG_RAW = FALSE
GRID_STAT_NC_PAIRS_FLAG_DIFF = FALSE
GRID_STAT_NC_PAIRS_FLAG_CLIMO = FALSE
GRID_STAT_NC_PAIRS_FLAG_WEIGHT = FALSE
GRID_STAT_NC_PAIRS_FLAG_NBRHD = FALSE
GRID_STAT_NC_PAIRS_FLAG_FOURIER = FALSE
GRID_STAT_NC_PAIRS_FLAG_GRADIENT = FALSE
GRID_STAT_NC_PAIRS_FLAG_DISTANCE_MAP = FALSE
GRID_STAT_NC_PAIRS_FLAG_APPLY_MASK = FALSE

# End of [config] section and start of [dir] section.
[dir]
#
# Directory containing observation input to GridStat.
#
OBS_GRID_STAT_INPUT_DIR = {{obs_input_dir}}
#
# Directory containing forecast input to GridStat.
#
FCST_GRID_STAT_INPUT_DIR = {{fcst_input_dir}}
#
# Directory containing climatology mean input to GridStat.  Not used in
# this example.
#
GRID_STAT_CLIMO_MEAN_INPUT_DIR =
#
# Directory containing climatology mean input to GridStat.  Not used in
# this example.
#
GRID_STAT_CLIMO_STDEV_INPUT_DIR =
#
# Directory in which to write output from GridStat.
#
# OUTPUT_BASE apparently has to be set to something; it cannot be left
# to its default value.  But it is not explicitly used elsewhere in this
# configuration file.
#
OUTPUT_BASE = {{output_base}}
GRID_STAT_OUTPUT_DIR = {{output_dir}}
#
# Directory for staging data.
#
STAGING_DIR = {{staging_dir}}

# End of [dir] section and start of [filename_templates] section.
[filename_templates]
#
# Template for observation input to GridStat relative to
# OBS_GRID_STAT_INPUT_DIR.
#
OBS_GRID_STAT_INPUT_TEMPLATE = {{obs_input_fn_template}}
#
# Template for forecast input to GridStat relative to
# FCST_GRID_STAT_INPUT_DIR.
#
FCST_GRID_STAT_INPUT_TEMPLATE = {{fcst_input_fn_template}}
#
# Template for output from GridStat relative to GRID_STAT_OUTPUT_DIR.
#
GRID_STAT_OUTPUT_TEMPLATE =
#
# Template for climatology input to GridStat relative to
# GRID_STAT_CLIMO_MEAN_INPUT_DIR.  Not used in this example.
#
GRID_STAT_CLIMO_MEAN_INPUT_TEMPLATE =
#
# Template for climatology input to GridStat relative to
# GRID_STAT_CLIMO_STDEV_INPUT_DIR.  Not used in this example.
#
GRID_STAT_CLIMO_STDEV_INPUT_TEMPLATE =
#
# Variable used to specify one or more verification mask files for
# GridStat.  Not used for this example.
#
GRID_STAT_VERIFICATION_MASK_TEMPLATE = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly
